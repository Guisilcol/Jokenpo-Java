package view;

import controller.SingleplayerController;
import java.util.Random;
import model.Player;
import utility.ImageUtility;

/**
 *
 * @author guilherme
 */
public class MainGUI extends javax.swing.JFrame {

    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuPanel = new com.hermespasser.imgpanel.ImgPanel(null, com.hermespasser.imgpanel.ImageAnchor.FIT_IN_PANEL);
        btnSingleplayer = new javax.swing.JButton();
        SingleplayerPanel = new com.hermespasser.imgpanel.ImgPanel(null, com.hermespasser.imgpanel.ImageAnchor.FIT_IN_PANEL);
        jSeparator1 = new javax.swing.JSeparator();
        lblDraw = new javax.swing.JLabel();
        lblCpuWin = new javax.swing.JLabel();
        lblPlayerWin = new javax.swing.JLabel();
        lblCpuScore = new javax.swing.JLabel();
        lblPlayer = new javax.swing.JLabel();
        lblCpu = new javax.swing.JLabel();
        lblPlayerScore = new javax.swing.JLabel();
        lblCpuImg = new javax.swing.JLabel();
        lblPlayerImg = new javax.swing.JLabel();
        btnRock = new javax.swing.JButton();
        btnPaper = new javax.swing.JButton();
        btnScissor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jokenpo!");
        setResizable(false);

        MenuPanel.setBackground(new java.awt.Color(255, 255, 255));
        MenuPanel.setPreferredSize(new java.awt.Dimension(700, 500));
        MenuPanel.setLayout(null);
        
        MenuPanel.setImage(ImageUtility.getImage("src/view/image/menu-title-wallpaper.png"));

        btnSingleplayer.setText("Start");
        btnSingleplayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSingleplayerActionPerformed(evt);
            }
        });
        MenuPanel.add(btnSingleplayer);
        btnSingleplayer.setBounds(270, 280, 140, 31);
        MenuPanel.setImage(ImageUtility.getImage("src/view/image/menu-wallpaper.jpg"));

        SingleplayerPanel.setPreferredSize(new java.awt.Dimension(700, 500));
        SingleplayerPanel.setVisible(false);
        SingleplayerPanel.setLayout(null);

        jSeparator1.setBackground(new java.awt.Color(132, 12, 12));
        jSeparator1.setForeground(new java.awt.Color(133, 15, 15));
        jSeparator1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        SingleplayerPanel.add(jSeparator1);
        jSeparator1.setBounds(0, 223, 700, 17);

        lblDraw.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblDraw.setText("Draw!");
        SingleplayerPanel.add(lblDraw);
        lblDraw.setBounds(300, 20, 150, 50);
        lblDraw.setVisible(false);

        lblCpuWin.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCpuWin.setText("CPU Wins!");
        SingleplayerPanel.add(lblCpuWin);
        lblCpuWin.setBounds(440, 130, 150, 50);
        lblCpuWin.setVisible(false);

        lblPlayerWin.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblPlayerWin.setText("Player Wins!");
        SingleplayerPanel.add(lblPlayerWin);
        lblPlayerWin.setBounds(440, 270, 150, 50);
        lblPlayerWin.setVisible(false);

        lblCpuScore.setText("0");
        SingleplayerPanel.add(lblCpuScore);
        lblCpuScore.setBounds(600, 70, 40, 15);

        lblPlayer.setText("Player");
        SingleplayerPanel.add(lblPlayer);
        lblPlayer.setBounds(30, 40, 80, 15);

        lblCpu.setText("CPU");
        SingleplayerPanel.add(lblCpu);
        lblCpu.setBounds(600, 40, 50, 15);

        lblPlayerScore.setText("0");
        SingleplayerPanel.add(lblPlayerScore);
        lblPlayerScore.setBounds(30, 70, 40, 15);
        SingleplayerPanel.add(lblCpuImg);
        lblCpuImg.setBounds(250, 90, 150, 100);
        SingleplayerPanel.add(lblPlayerImg);
        lblPlayerImg.setBounds(250, 250, 150, 100);

        btnRock.setText("Rock");
        btnRock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRockActionPerformed(evt);
            }
        });
        SingleplayerPanel.add(btnRock);
        btnRock.setBounds(100, 430, 100, 59);

        btnPaper.setText("Paper");
        btnPaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaperActionPerformed(evt);
            }
        });
        SingleplayerPanel.add(btnPaper);
        btnPaper.setBounds(300, 430, 100, 59);

        btnScissor.setText("Scissor");
        btnScissor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScissorActionPerformed(evt);
            }
        });
        SingleplayerPanel.add(btnScissor);
        btnScissor.setBounds(500, 430, 100, 59);

        SingleplayerPanel.setImage(ImageUtility.getImage("src/view/image/singleplayer-wallpaper.jpg"));
        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(MenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(SingleplayerPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(MenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(SingleplayerPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Menu Buttons
    private void btnSingleplayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSingleplayerActionPerformed

        MenuPanel.setVisible(false);
        SingleplayerPanel.setVisible(true);
    }//GEN-LAST:event_btnSingleplayerActionPerformed
    //End Menu Buttons

    //SingleplayerGUI Buttons
    private void btnRockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRockActionPerformed

        SingleplayerController.runMatch(new Player(Player.ROCK), new Player(new Random().nextInt(3) + 1),
                lblPlayerImg, lblCpuImg, lblPlayerScore, lblCpuScore, lblDraw, lblPlayerWin, lblCpuWin);
    }//GEN-LAST:event_btnRockActionPerformed

    private void btnPaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaperActionPerformed

        SingleplayerController.runMatch(new Player(Player.PAPER), new Player(new Random().nextInt(3) + 1),
                lblPlayerImg, lblCpuImg, lblPlayerScore, lblCpuScore, lblDraw, lblPlayerWin, lblCpuWin);
    }//GEN-LAST:event_btnPaperActionPerformed

    private void btnScissorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScissorActionPerformed

        SingleplayerController.runMatch(new Player(Player.SCISSOR), new Player(new Random().nextInt(3) + 1),
                lblPlayerImg, lblCpuImg, lblPlayerScore, lblCpuScore, lblDraw, lblPlayerWin, lblCpuWin);
    }//GEN-LAST:event_btnScissorActionPerformed
    //End SingleplayerGUI Buttons

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hermespasser.imgpanel.ImgPanel MenuPanel;
    private com.hermespasser.imgpanel.ImgPanel SingleplayerPanel;
    private javax.swing.JButton btnPaper;
    private javax.swing.JButton btnRock;
    private javax.swing.JButton btnScissor;
    private javax.swing.JButton btnSingleplayer;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCpu;
    private javax.swing.JLabel lblCpuImg;
    private javax.swing.JLabel lblCpuScore;
    private javax.swing.JLabel lblCpuWin;
    private javax.swing.JLabel lblDraw;
    private javax.swing.JLabel lblPlayer;
    private javax.swing.JLabel lblPlayerImg;
    private javax.swing.JLabel lblPlayerScore;
    private javax.swing.JLabel lblPlayerWin;
}
